/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DividendsPool, DividendsPoolInterface } from "../DividendsPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotteryWinRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotteryCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotteryRewardCoefficient",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "foxTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "stableCoinAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "adId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositDone",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lotteryWon",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FOX_TOKEN",
    outputs: [
      {
        internalType: "contract FoxToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_COST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_REWARD_COEFFICIENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_WIN_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STABLE_COIN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    name: "appendRandNumHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userRandNum",
        type: "uint256",
      },
    ],
    name: "buyLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "foxHoldings",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "coefficient",
        type: "uint256",
      },
    ],
    name: "calculateRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeReceiver",
        type: "address",
      },
    ],
    name: "changeFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPoolSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "lotteryIds",
        type: "uint32[]",
      },
      {
        internalType: "uint256[]",
        name: "preimages",
        type: "uint256[]",
      },
    ],
    name: "drawLotteries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "lotteryId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "preimage",
        type: "uint256",
      },
    ],
    name: "drawLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lotteries",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userRandNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "revealedRandNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolSizeSnapshot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxUserHoldingsSnapshot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxSupplySnapshot",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randNumHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620016f6380380620016f6833981016040819052620000359162000195565b620000403362000128565b600180546001600160a01b0319166001600160a01b0389811691909117909155608087905260a086905260c085905260e08490528281166101005281166101205260006004556064851115620000d25760405162461bcd60e51b815260206004820152601260248201527157696e20726174696f206f766572666c6f7760701b60448201526064015b60405180910390fd5b606460805111156200011b5760405162461bcd60e51b81526020600482015260116024820152704665652072617465206f766572666c6f7760781b6044820152606401620000c9565b5050505050505062000206565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200019057600080fd5b919050565b600080600080600080600060e0888a031215620001b157600080fd5b620001bc8862000178565b965060208801519550604088015194506060880151935060808801519250620001e860a0890162000178565b9150620001f860c0890162000178565b905092959891949750929550565b60805160a05160c05160e0516101005161012051611453620002a3600039600081816101cd01528181610619015281816106b8015281816109f301526110a901526000818161025601528181610c1501528181610c870152610ea3015260008181610356015261105701526000818161031c0152610e7a0152600081816102cf0152610fff01526000818161022101526105c501526114536000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80639e0b904b116100cd578063c27efc4f11610081578063dccc09b811610066578063dccc09b814610380578063f2fde38b14610393578063ff2156c5146103a657600080fd5b8063c27efc4f14610351578063d6de5cf61461037857600080fd5b8063b6b55f25116100b2578063b6b55f2514610304578063b99ff45a14610317578063b9a207f61461033e57600080fd5b80639e0b904b146102ca578063b3f00674146102f157600080fd5b80634deb0b2d116101245780637c08b964116101095780637c08b964146102935780638d9f5525146102a65780638da5cb5b146102b957600080fd5b80634deb0b2d14610278578063715018a61461028b57600080fd5b8063284fb95111610155578063284fb951146102075780632d11c58a1461021c578063317ab7e31461025157600080fd5b80631398e076146101715780631a507d5d146101c8575b600080fd5b61018461017f366004611166565b6103b9565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0015b60405180910390f35b6101ef7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101bf565b61021a6102153660046111cb565b610412565b005b6102437f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101bf565b6101ef7f000000000000000000000000000000000000000000000000000000000000000081565b610243610286366004611166565b6104e4565b61021a610505565b61021a6102a1366004611237565b610519565b61021a6102b4366004611267565b610550565b6000546001600160a01b03166101ef565b6102437f000000000000000000000000000000000000000000000000000000000000000081565b6001546101ef906001600160a01b031681565b61021a610312366004611166565b6105bc565b6102437f000000000000000000000000000000000000000000000000000000000000000081565b61021a61034c3660046112c2565b61077a565b6102437f000000000000000000000000000000000000000000000000000000000000000081565b6102436109db565b61024361038e3660046112ec565b610a6b565b61021a6103a1366004611237565b610aca565b61021a6103b4366004611166565b610b5a565b600281815481106103c957600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601546001600160a01b039095169650929491939092919087565b8281146104665760405162461bcd60e51b815260206004820152601060248201527f4173796d6d65747269632062617463680000000000000000000000000000000060448201526064015b60405180910390fd5b60005b63ffffffff81168211156104dd576104cb85858363ffffffff168181106104925761049261131e565b90506020020160208101906104a79190611334565b84848463ffffffff168181106104bf576104bf61131e565b9050602002013561077a565b806104d581611365565b915050610469565b5050505050565b600381815481106104f457600080fd5b600091825260209091200154905081565b61050d610f03565b6105176000610f5d565b565b610521610f03565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610558610f03565b60005b63ffffffff81168211156105b757600383838363ffffffff168181106105835761058361131e565b83546001810185556000948552602094859020919094029290920135919092015550806105af81611365565b91505061055b565b505050565b600060646105ea7f000000000000000000000000000000000000000000000000000000000000000084611388565b6105f491906113a7565b6040516323b872dd60e01b8152336004820152306024820152604481018490529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e91906113c9565b5060015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072791906113c9565b5060048054906000610738836113eb565b90915550506004546040518381523391907f1531464daa9dec5fbac2172ee47613977258310ea2b6397033add8ecd912c0789060200160405180910390a35050565b60025463ffffffff8316106107d15760405162461bcd60e51b815260206004820152601460248201527f4e6f6e2d6578697374656e74206c6f7474657279000000000000000000000000604482015260640161045d565b60035463ffffffff831611156108295760405162461bcd60e51b815260206004820152601c60248201527f416464206d6f72652072616e644e756d48617368657320666972737400000000604482015260640161045d565b600060028363ffffffff16815481106108445761084461131e565b9060005260206000209060070201905080600301546000146108b35760405162461bcd60e51b815260206004820152602260248201527f546865206c6f74746572792068617320616c7265616479206265656e206472616044820152613bb760f11b606482015260840161045d565b60038363ffffffff16815481106108cc576108cc61131e565b9060005260206000200154826040516020016108ea91815260200190565b604051602081830303815290604052805190602001201461094d5760405162461bcd60e51b815260206004820152601060248201527f496e76616c696420707265696d61676500000000000000000000000000000000604482015260640161045d565b600281018290556040805160e08101825282546001600160a01b03168152600183015460208201529081018390526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526000906109af90610fba565b905080156109d5576003820181905581546109d59085906001600160a01b031683611083565b50505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a669190611404565b905090565b6000808383610a7a8789611388565b610a849190611388565b610a8e91906113a7565b90506005610a9a6109db565b610aa491906113a7565b8110610ac1576005610ab46109db565b610abe91906113a7565b90505b95945050505050565b610ad2610f03565b6001600160a01b038116610b4e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161045d565b610b5781610f5d565b50565b60025460035411610bb85760405162461bcd60e51b815260206004820152602260248201527f506c73207761697420666f722061646d696e20616464206d6f72652068617368604482015261657360f01b606482015260840161045d565b60006040518060e00160405280336001600160a01b031681526020018381526020016000815260200160008152602001610bf06109db565b81526040516370a0823160e01b81523360048201526020909101906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c809190611404565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d079190611404565b90526002805460018101825560009190915281517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6007909202918201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392831617905560208301517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf8301556040808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad084015560608401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad184015560808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad284015560a08401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad384015560c08401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad4909301929092559051634ee132d360e11b81523360048201527f000000000000000000000000000000000000000000000000000000000000000060248201529192507f00000000000000000000000000000000000000000000000000000000000000001690639dc265a690604401600060405180830381600087803b158015610ee757600080fd5b505af1158015610efb573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146105175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161045d565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008082604001518360200151604051602001610fe1929190918252602082015260400190565b60408051601f198184030181529190528051602090910120905060007f000000000000000000000000000000000000000000000000000000000000000061102b60646000196113a7565b6110359190611388565b82111561104357600061107b565b61107b8460a0015185608001518660c001517f0000000000000000000000000000000000000000000000000000000000000000610a6b565b949350505050565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156110f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111691906113c9565b50816001600160a01b03168363ffffffff167f7746db1bdb1f7ff7cbcc9a0c7459d9efcaed5ad4c5f469d14b648c86f8195e668360405161115991815260200190565b60405180910390a3505050565b60006020828403121561117857600080fd5b5035919050565b60008083601f84011261119157600080fd5b50813567ffffffffffffffff8111156111a957600080fd5b6020830191508360208260051b85010111156111c457600080fd5b9250929050565b600080600080604085870312156111e157600080fd5b843567ffffffffffffffff808211156111f957600080fd5b6112058883890161117f565b9096509450602087013591508082111561121e57600080fd5b5061122b8782880161117f565b95989497509550505050565b60006020828403121561124957600080fd5b81356001600160a01b038116811461126057600080fd5b9392505050565b6000806020838503121561127a57600080fd5b823567ffffffffffffffff81111561129157600080fd5b61129d8582860161117f565b90969095509350505050565b803563ffffffff811681146112bd57600080fd5b919050565b600080604083850312156112d557600080fd5b6112de836112a9565b946020939093013593505050565b6000806000806080858703121561130257600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561134657600080fd5b611260826112a9565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff80831681810361137e5761137e61134f565b6001019392505050565b60008160001904831182151516156113a2576113a261134f565b500290565b6000826113c457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156113db57600080fd5b8151801515811461126057600080fd5b6000600182016113fd576113fd61134f565b5060010190565b60006020828403121561141657600080fd5b505191905056fea2646970667358221220fc6f77f84198c399c77ca05477afe561fdeb6488504f8ae847959cc5a4667d1764736f6c634300080f0033";

type DividendsPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DividendsPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DividendsPool__factory extends ContractFactory {
  constructor(...args: DividendsPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feeReceiver: PromiseOrValue<string>,
    feeRate: PromiseOrValue<BigNumberish>,
    lotteryWinRatio: PromiseOrValue<BigNumberish>,
    lotteryCost: PromiseOrValue<BigNumberish>,
    lotteryRewardCoefficient: PromiseOrValue<BigNumberish>,
    foxTokenAddress: PromiseOrValue<string>,
    stableCoinAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DividendsPool> {
    return super.deploy(
      _feeReceiver,
      feeRate,
      lotteryWinRatio,
      lotteryCost,
      lotteryRewardCoefficient,
      foxTokenAddress,
      stableCoinAddress,
      overrides || {}
    ) as Promise<DividendsPool>;
  }
  override getDeployTransaction(
    _feeReceiver: PromiseOrValue<string>,
    feeRate: PromiseOrValue<BigNumberish>,
    lotteryWinRatio: PromiseOrValue<BigNumberish>,
    lotteryCost: PromiseOrValue<BigNumberish>,
    lotteryRewardCoefficient: PromiseOrValue<BigNumberish>,
    foxTokenAddress: PromiseOrValue<string>,
    stableCoinAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _feeReceiver,
      feeRate,
      lotteryWinRatio,
      lotteryCost,
      lotteryRewardCoefficient,
      foxTokenAddress,
      stableCoinAddress,
      overrides || {}
    );
  }
  override attach(address: string): DividendsPool {
    return super.attach(address) as DividendsPool;
  }
  override connect(signer: Signer): DividendsPool__factory {
    return super.connect(signer) as DividendsPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DividendsPoolInterface {
    return new utils.Interface(_abi) as DividendsPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DividendsPool {
    return new Contract(address, _abi, signerOrProvider) as DividendsPool;
  }
}
