/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DividendsPool, DividendsPoolInterface } from "../DividendsPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotteryWinRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotteryCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotteryRewardCoefficient",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "foxTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "stableCoinAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "adId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositDone",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lotteryWon",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FOX_TOKEN",
    outputs: [
      {
        internalType: "contract FoxToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_COST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_REWARD_COEFFICIENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_WIN_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STABLE_COIN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    name: "appendRandNumHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userRandNum",
        type: "uint256",
      },
    ],
    name: "buyLottery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "foxHoldings",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "coefficient",
        type: "uint256",
      },
    ],
    name: "calculateRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeReceiver",
        type: "address",
      },
    ],
    name: "changeFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPoolSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "lotteryIds",
        type: "uint32[]",
      },
      {
        internalType: "uint256[]",
        name: "preimages",
        type: "uint256[]",
      },
    ],
    name: "drawLotteries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "lotteryId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "preimage",
        type: "uint256",
      },
    ],
    name: "drawLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHashesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLotteriesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "isLotteryDrawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lotteries",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userRandNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "revealedRandNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolSizeSnapshot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxUserHoldingsSnapshot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxSupplySnapshot",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isDrawn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randNumHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040516200181038038062001810833981016040819052620000359162000195565b620000403362000128565b600180546001600160a01b0319166001600160a01b0389811691909117909155608087905260a086905260c085905260e08490528281166101005281166101205260006004556064851115620000d25760405162461bcd60e51b815260206004820152601260248201527157696e20726174696f206f766572666c6f7760701b60448201526064015b60405180910390fd5b606460805111156200011b5760405162461bcd60e51b81526020600482015260116024820152704665652072617465206f766572666c6f7760781b6044820152606401620000c9565b5050505050505062000206565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200019057600080fd5b919050565b600080600080600080600060e0888a031215620001b157600080fd5b620001bc8862000178565b965060208801519550604088015194506060880151935060808801519250620001e860a0890162000178565b9150620001f860c0890162000178565b905092959891949750929550565b60805160a05160c05160e051610100516101205161156d620002a3600039600081816101f6015281816106b10152818161075001528181610aae01526111b301526000818161027f01528181610cd401528181610d460152610f9b0152600081816103b201526111610152600081816103700152610f72015260008181610300015261110901526000818161024a015261065d015261156d6000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80639e0b904b116100e3578063bf543ff71161008c578063dccc09b811610066578063dccc09b8146103dc578063f2fde38b146103ef578063ff2156c51461040257600080fd5b8063bf543ff7146103a5578063c27efc4f146103ad578063d6de5cf6146103d457600080fd5b8063b6b55f25116100bd578063b6b55f2514610358578063b99ff45a1461036b578063b9a207f61461039257600080fd5b80639e0b904b146102fb578063a199399114610322578063b3f006741461034557600080fd5b806331be23e4116101455780637c08b9641161011f5780637c08b964146102c45780638d9f5525146102d75780638da5cb5b146102ea57600080fd5b806331be23e4146102a15780634deb0b2d146102a9578063715018a6146102bc57600080fd5b8063284fb95111610176578063284fb951146102305780632d11c58a14610245578063317ab7e31461027a57600080fd5b80631398e076146101925780631a507d5d146101f1575b600080fd5b6101a56101a0366004611270565b610415565b604080516001600160a01b0390991689526020890197909752958701949094526060860192909252608085015260a084015260c0830152151560e0820152610100015b60405180910390f35b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101e8565b61024361023e3660046112d5565b610478565b005b61026c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101e8565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b60025461026c565b61026c6102b7366004611270565b61054a565b61024361056b565b6102436102d2366004611341565b61057f565b6102436102e536600461136a565b6105b6565b6000546001600160a01b0316610218565b61026c7f000000000000000000000000000000000000000000000000000000000000000081565b610335610330366004611270565b610622565b60405190151581526020016101e8565b600154610218906001600160a01b031681565b610243610366366004611270565b610654565b61026c7f000000000000000000000000000000000000000000000000000000000000000081565b6102436103a03660046113c5565b610812565b60035461026c565b61026c7f000000000000000000000000000000000000000000000000000000000000000081565b61026c610a96565b61026c6103ea3660046113ef565b610b26565b6102436103fd366004611341565b610b85565b61026c610410366004611270565b610c15565b6002818154811061042557600080fd5b6000918252602090912060089091020180546001820154600283015460038401546004850154600586015460068701546007909701546001600160a01b0390961697509395929491939092909160ff1688565b8281146104cc5760405162461bcd60e51b815260206004820152601060248201527f4173796d6d65747269632062617463680000000000000000000000000000000060448201526064015b60405180910390fd5b60005b63ffffffff81168211156105435761053185858363ffffffff168181106104f8576104f8611421565b905060200201602081019061050d9190611437565b84848463ffffffff1681811061052557610525611421565b90506020020135610812565b8061053b81611468565b9150506104cf565b5050505050565b6003818154811061055a57600080fd5b600091825260209091200154905081565b61057361100d565b61057d6000611067565b565b61058761100d565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6105be61100d565b60005b63ffffffff811682111561061d57600383838363ffffffff168181106105e9576105e9611421565b835460018101855560009485526020948590209190940292909201359190920155508061061581611468565b9150506105c1565b505050565b60006002828154811061063757610637611421565b600091825260209091206007600890920201015460ff1692915050565b600060646106827f00000000000000000000000000000000000000000000000000000000000000008461148b565b61068c91906114aa565b6040516323b872dd60e01b8152336004820152306024820152604481018490529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610702573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072691906114cc565b5060015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af115801561079b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bf91906114cc565b50600480549060006107d0836114ee565b90915550506004546040518381523391907f1531464daa9dec5fbac2172ee47613977258310ea2b6397033add8ecd912c0789060200160405180910390a35050565b60025463ffffffff8316106108695760405162461bcd60e51b815260206004820152601460248201527f4e6f6e2d6578697374656e74206c6f747465727900000000000000000000000060448201526064016104c3565b60035463ffffffff831611156108c15760405162461bcd60e51b815260206004820152601c60248201527f416464206d6f72652072616e644e756d4861736865732066697273740000000060448201526064016104c3565b600060028363ffffffff16815481106108dc576108dc611421565b60009182526020909120600890910201600781015490915060ff161561094f5760405162461bcd60e51b815260206004820152602260248201527f546865206c6f74746572792068617320616c7265616479206265656e206472616044820152613bb760f11b60648201526084016104c3565b60038363ffffffff168154811061096857610968611421565b90600052602060002001548260405160200161098691815260200190565b60405160208183030381529060405280519060200120146109e95760405162461bcd60e51b815260206004820152601060248201527f496e76616c696420707265696d6167650000000000000000000000000000000060448201526064016104c3565b60028101829055604080516101008101825282546001600160a01b03168152600183015460208201529081018390526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460ff16151560e0820152600090610a5b906110c4565b60078301805460ff1916600117905590508015610a9057600382018190558154610a909085906001600160a01b03168361118d565b50505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610afd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b219190611507565b905090565b6000808383610b35878961148b565b610b3f919061148b565b610b4991906114aa565b90506005610b55610a96565b610b5f91906114aa565b8110610b7c576005610b6f610a96565b610b7991906114aa565b90505b95945050505050565b610b8d61100d565b6001600160a01b038116610c095760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104c3565b610c1281611067565b50565b60025460035460009110610c765760405162461bcd60e51b815260206004820152602260248201527f506c73207761697420666f722061646d696e20616464206d6f72652068617368604482015261657360f01b60648201526084016104c3565b6000604051806101000160405280336001600160a01b031681526020018481526020016000815260200160008152602001610caf610a96565b81526040516370a0823160e01b81523360048201526020909101906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3f9190611507565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190611507565b81526000602091820181905260028054600181018255915282517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6008909202918201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03928316179055918301517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf8201556040808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad083015560608401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad183015560808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad283015560a08401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad383015560c08401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad483015560e08401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad5909201805460ff19169215159290921790915551634ee132d360e11b81523360048201527f000000000000000000000000000000000000000000000000000000000000000060248201529192507f00000000000000000000000000000000000000000000000000000000000000001690639dc265a690604401600060405180830381600087803b158015610fdf57600080fd5b505af1158015610ff3573d6000803e3d6000fd5b5050600254611006925060019150611520565b9392505050565b6000546001600160a01b0316331461057d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c3565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826040015183602001516040516020016110eb929190918252602082015260400190565b60408051601f198184030181529190528051602090910120905060007f000000000000000000000000000000000000000000000000000000000000000061113560646000196114aa565b61113f919061148b565b82111561114d576000611185565b6111858460a0015185608001518660c001517f0000000000000000000000000000000000000000000000000000000000000000610b26565b949350505050565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156111fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122091906114cc565b50816001600160a01b03168363ffffffff167f7746db1bdb1f7ff7cbcc9a0c7459d9efcaed5ad4c5f469d14b648c86f8195e668360405161126391815260200190565b60405180910390a3505050565b60006020828403121561128257600080fd5b5035919050565b60008083601f84011261129b57600080fd5b50813567ffffffffffffffff8111156112b357600080fd5b6020830191508360208260051b85010111156112ce57600080fd5b9250929050565b600080600080604085870312156112eb57600080fd5b843567ffffffffffffffff8082111561130357600080fd5b61130f88838901611289565b9096509450602087013591508082111561132857600080fd5b5061133587828801611289565b95989497509550505050565b60006020828403121561135357600080fd5b81356001600160a01b038116811461100657600080fd5b6000806020838503121561137d57600080fd5b823567ffffffffffffffff81111561139457600080fd5b6113a085828601611289565b90969095509350505050565b803563ffffffff811681146113c057600080fd5b919050565b600080604083850312156113d857600080fd5b6113e1836113ac565b946020939093013593505050565b6000806000806080858703121561140557600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561144957600080fd5b611006826113ac565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff80831681810361148157611481611452565b6001019392505050565b60008160001904831182151516156114a5576114a5611452565b500290565b6000826114c757634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156114de57600080fd5b8151801515811461100657600080fd5b60006001820161150057611500611452565b5060010190565b60006020828403121561151957600080fd5b5051919050565b60008282101561153257611532611452565b50039056fea2646970667358221220baa1e83f6213d7c8d04d91be102858a00f1b0b4f2b14403a37ac8fc696d2d61364736f6c634300080f0033";

type DividendsPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DividendsPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DividendsPool__factory extends ContractFactory {
  constructor(...args: DividendsPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feeReceiver: PromiseOrValue<string>,
    feeRate: PromiseOrValue<BigNumberish>,
    lotteryWinRatio: PromiseOrValue<BigNumberish>,
    lotteryCost: PromiseOrValue<BigNumberish>,
    lotteryRewardCoefficient: PromiseOrValue<BigNumberish>,
    foxTokenAddress: PromiseOrValue<string>,
    stableCoinAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DividendsPool> {
    return super.deploy(
      _feeReceiver,
      feeRate,
      lotteryWinRatio,
      lotteryCost,
      lotteryRewardCoefficient,
      foxTokenAddress,
      stableCoinAddress,
      overrides || {}
    ) as Promise<DividendsPool>;
  }
  override getDeployTransaction(
    _feeReceiver: PromiseOrValue<string>,
    feeRate: PromiseOrValue<BigNumberish>,
    lotteryWinRatio: PromiseOrValue<BigNumberish>,
    lotteryCost: PromiseOrValue<BigNumberish>,
    lotteryRewardCoefficient: PromiseOrValue<BigNumberish>,
    foxTokenAddress: PromiseOrValue<string>,
    stableCoinAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _feeReceiver,
      feeRate,
      lotteryWinRatio,
      lotteryCost,
      lotteryRewardCoefficient,
      foxTokenAddress,
      stableCoinAddress,
      overrides || {}
    );
  }
  override attach(address: string): DividendsPool {
    return super.attach(address) as DividendsPool;
  }
  override connect(signer: Signer): DividendsPool__factory {
    return super.connect(signer) as DividendsPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DividendsPoolInterface {
    return new utils.Interface(_abi) as DividendsPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DividendsPool {
    return new Contract(address, _abi, signerOrProvider) as DividendsPool;
  }
}
