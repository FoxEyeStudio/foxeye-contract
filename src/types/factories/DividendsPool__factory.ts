/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DividendsPool, DividendsPoolInterface } from "../DividendsPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotteryWinRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotteryCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotteryRewardCoefficient",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "foxTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "stableCoinAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "AdId",
        type: "uint256",
      },
    ],
    name: "depositDone",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lotteryWon",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FOX_TOKEN",
    outputs: [
      {
        internalType: "contract FoxToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_COST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_REWARD_COEFFICIENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_WIN_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STABLE_COIN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    name: "appendRandNumHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userRandNum",
        type: "uint256",
      },
    ],
    name: "buyLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeReceiver",
        type: "address",
      },
    ],
    name: "changeFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPoolSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "lotteryId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "preimage",
        type: "uint256",
      },
    ],
    name: "drawLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lotteries",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userRandNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "revealedRandNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolSizeSnapshot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxUserHoldingsSnapshot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxSupplySnapshot",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randNumHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type DividendsPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DividendsPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DividendsPool__factory extends ContractFactory {
  constructor(...args: DividendsPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feeReceiver: PromiseOrValue<string>,
    feeRate: PromiseOrValue<BigNumberish>,
    lotteryWinRatio: PromiseOrValue<BigNumberish>,
    lotteryCost: PromiseOrValue<BigNumberish>,
    lotteryRewardCoefficient: PromiseOrValue<BigNumberish>,
    foxTokenAddress: PromiseOrValue<string>,
    stableCoinAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DividendsPool> {
    return super.deploy(
      _feeReceiver,
      feeRate,
      lotteryWinRatio,
      lotteryCost,
      lotteryRewardCoefficient,
      foxTokenAddress,
      stableCoinAddress,
      overrides || {}
    ) as Promise<DividendsPool>;
  }
  override getDeployTransaction(
    _feeReceiver: PromiseOrValue<string>,
    feeRate: PromiseOrValue<BigNumberish>,
    lotteryWinRatio: PromiseOrValue<BigNumberish>,
    lotteryCost: PromiseOrValue<BigNumberish>,
    lotteryRewardCoefficient: PromiseOrValue<BigNumberish>,
    foxTokenAddress: PromiseOrValue<string>,
    stableCoinAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _feeReceiver,
      feeRate,
      lotteryWinRatio,
      lotteryCost,
      lotteryRewardCoefficient,
      foxTokenAddress,
      stableCoinAddress,
      overrides || {}
    );
  }
  override attach(address: string): DividendsPool {
    return super.attach(address) as DividendsPool;
  }
  override connect(signer: Signer): DividendsPool__factory {
    return super.connect(signer) as DividendsPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DividendsPoolInterface {
    return new utils.Interface(_abi) as DividendsPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DividendsPool {
    return new Contract(address, _abi, signerOrProvider) as DividendsPool;
  }
}
